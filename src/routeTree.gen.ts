/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const LeaderboardLazyImport = createFileRoute('/leaderboard')()
const ExamLazyImport = createFileRoute('/exam')()
const CoursesLazyImport = createFileRoute('/courses')()
const IndexLazyImport = createFileRoute('/')()
const CourseCourseDetailsLazyImport = createFileRoute('/course/courseDetails')()

// Create/Update Routes

const LeaderboardLazyRoute = LeaderboardLazyImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/leaderboard.lazy').then((d) => d.Route))

const ExamLazyRoute = ExamLazyImport.update({
  id: '/exam',
  path: '/exam',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/exam.lazy').then((d) => d.Route))

const CoursesLazyRoute = CoursesLazyImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/courses.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const CourseCourseDetailsLazyRoute = CourseCourseDetailsLazyImport.update({
  id: '/course/courseDetails',
  path: '/course/courseDetails',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/course/courseDetails.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/courses': {
      id: '/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesLazyImport
      parentRoute: typeof rootRoute
    }
    '/exam': {
      id: '/exam'
      path: '/exam'
      fullPath: '/exam'
      preLoaderRoute: typeof ExamLazyImport
      parentRoute: typeof rootRoute
    }
    '/leaderboard': {
      id: '/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/course/courseDetails': {
      id: '/course/courseDetails'
      path: '/course/courseDetails'
      fullPath: '/course/courseDetails'
      preLoaderRoute: typeof CourseCourseDetailsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/courses': typeof CoursesLazyRoute
  '/exam': typeof ExamLazyRoute
  '/leaderboard': typeof LeaderboardLazyRoute
  '/course/courseDetails': typeof CourseCourseDetailsLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/courses': typeof CoursesLazyRoute
  '/exam': typeof ExamLazyRoute
  '/leaderboard': typeof LeaderboardLazyRoute
  '/course/courseDetails': typeof CourseCourseDetailsLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/courses': typeof CoursesLazyRoute
  '/exam': typeof ExamLazyRoute
  '/leaderboard': typeof LeaderboardLazyRoute
  '/course/courseDetails': typeof CourseCourseDetailsLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/courses'
    | '/exam'
    | '/leaderboard'
    | '/course/courseDetails'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/courses' | '/exam' | '/leaderboard' | '/course/courseDetails'
  id:
    | '__root__'
    | '/'
    | '/courses'
    | '/exam'
    | '/leaderboard'
    | '/course/courseDetails'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CoursesLazyRoute: typeof CoursesLazyRoute
  ExamLazyRoute: typeof ExamLazyRoute
  LeaderboardLazyRoute: typeof LeaderboardLazyRoute
  CourseCourseDetailsLazyRoute: typeof CourseCourseDetailsLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CoursesLazyRoute: CoursesLazyRoute,
  ExamLazyRoute: ExamLazyRoute,
  LeaderboardLazyRoute: LeaderboardLazyRoute,
  CourseCourseDetailsLazyRoute: CourseCourseDetailsLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/courses",
        "/exam",
        "/leaderboard",
        "/course/courseDetails"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/courses": {
      "filePath": "courses.lazy.jsx"
    },
    "/exam": {
      "filePath": "exam.lazy.jsx"
    },
    "/leaderboard": {
      "filePath": "leaderboard.lazy.jsx"
    },
    "/course/courseDetails": {
      "filePath": "course/courseDetails.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
